plugins {
    id 'com.enonic.xp.app' version '2.0.0-TEST'
    id "com.moowork.node" version "1.3.1"
}

app {
    name = project.appName
    displayName = 'Chatbot App'
    vendorName = 'Enonic AS'
    vendorUrl = 'http://enonic.com'
    systemVersion = "${xpVersion}"
}

node {
    download = false
    version = '9.8.0'
}

dependencies {
//    compile "com.enonic.xp:core-api:${xpVersion}"
//    compile "com.enonic.xp:portal-api:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.xp:lib-mustache:${xpVersion}"
//    include "com.enonic.xp:lib-io:${xpVersion}"
    include "com.enonic.xp:lib-repo:${xpVersion}"
    include "com.enonic.xp:lib-context:${xpVersion}"
    include "com.enonic.xp:lib-node:${xpVersion}"
    include "com.enonic.xp:lib-auth:${xpVersion}"
    include "com.enonic.xp:lib-value:${xpVersion}"
    include "com.enonic.xp:lib-admin:${xpVersion}"
    include 'com.enonic.lib:lib-http-client:1.0.1'
    include "com.enonic.lib:lib-router:1.0.1"
}

repositories {
    mavenLocal()
    jcenter()
    xp.enonicRepo()
}

println "Environment is set to '${nodeEnvironment()}'"

task lint( type: NpmTask, dependsOn: npmInstall ) {
    args = [ 'run', 'lint' ]
    inputs.files fileTree( dir: 'modules', include: '**/src/main/**.*' )
    outputs.dir file('gradle')
    outputs.upToDateWhen { false }
}

task webpack( type: NpmTask, dependsOn: [lint, processResources] ) {
    args = [ 'run', 'build' ]
}

jar.dependsOn webpack

def nodeEnvironment() {
    def environments = [ prod : 'production', dev: 'development' ]
    def nodeEnv = environments[hasProperty( 'env' ) ? env : 'dev']
    return nodeEnv != null ? nodeEnv : 'development'
}
